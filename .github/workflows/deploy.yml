name: Deploy to PythonAnywhere

on: 
  push:
    tags:
    - '*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      API_URL_INPUT: https://www.pythonanywhere.com/api/v0/user/${{ secrets.PA_USER }}/consoles/${{ secrets.PA_CONSOLE_ID }}/send_input/
      API_URL_RELOAD: https://www.pythonanywhere.com/api/v0/user/${{ secrets.PA_USER }}/webapps/${{ secrets.PA_USER }}.pythonanywhere.com/reload/
    steps:
    - uses: actions/checkout@v3
    - name: Deploy to PythonAnywhere Console
      run: |
        send_input() {
          response=$(curl "$API_URL_INPUT" -H "Authorization: Token ${{ secrets.PA_TOKEN }}"  -H "Content-Type: application/json" --data-binary "{\"input\": \"$1\n\"}")
          if [ "$response" != {\"status\":\"OK\"} ]; then
            echo "Sending input to PythonAnywhere was not successful. Stopping the workflow. Check endpoint and response below:"
            echo "$1"
            echo "$response"
            exit 1
          fi
        }
        send_input "eval \`ssh-agent\`"
        send_input "ssh-add ~/.ssh/id_ed25519"
        send_input "${{ secrets.PA_SSH_KEY_PASSPHRASE }}"
        send_input "workon ${{ secrets.PA_VIRTUALENV }}"
        send_input "cd ${{ secrets.PA_SRC_DIR }}"
        send_input "git checkout main && git fetch && git pull"
        send_input "pip install -r requirements.txt"
        send_input "python manage.py migrate --no-input"
        send_input "python manage.py collectstatic --no-input"
    - name: Reload PythonAnywhere web app
      run: |
        curl -X POST "$API_URL_RELOAD" -H "Authorization: Token ${{ secrets.PA_TOKEN }}"
